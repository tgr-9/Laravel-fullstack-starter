name: Deploy

on:
  workflow_call:
  release:
    types: [created]

env:
  APP_NAME: ${{ vars.APP_NAME }}
  APP_KEY: ${{ secrets.APP_KEY }}
  APP_LOCALE: id
  VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  # GIT_COMMIT_SHA: ${{ github.sha }}
  # GIT_BRANCH: ${{ github.ref }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Build and Deploy

    environment:
      name: staging
      url: ${{ vars.APP_URL }}

    env:
      APP_URL: ${{ vars.APP_URL }}
      APP_ENV: ${{ vars.APP_ENV }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare Environments
        run: |
          echo "GIT_BRANCH=$(echo ${GIT_BRANCH##*/} | tr / -)" >> $GITHUB_ENV
          git config user.name "Creasi.HQ" && git config user.email "dev@creasi.co"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: curl, intl, libxml, mbstring, pcntl, ssh2, zip
          tools: composer:v2
          coverage: none

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          node-version: 18.x

      - name: Prepare composer
        id: composer-cache
        run: |
          composer config -g github-oauth.github.com ${{ secrets.PAT }}
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Install node.js dependencies
        run: pnpm install

      - name: Build frontend
        run: |
          composer ziggy:generate
          pnpm build --mode ${{ vars.APP_ENV }}

      - name: Deploy
        uses: deployphp/action@v1
        with:
          private-key: ${{ secrets.STAGING_SERVER_RSAKEY }}
          ssh-config: ${{ secrets.STAGING_SERVER_SSH_CONFIG }}
          verbosity: ''
          dep: deploy -f scripts/deploy.php
