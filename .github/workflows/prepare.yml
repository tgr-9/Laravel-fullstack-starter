name: Prepare

on:
  workflow_call:
    inputs:
      target:
        description: 'Build target'
        default: testing
        required: false
        type: string
    outputs:
      composer-cache:
        value: ${{ jobs.build.outputs.composer-cache }}
      should-reports:
        value: ${{ jobs.build.outputs.should-reports }}
      target-branch:
        value: ${{ jobs.build.outputs.target-branch }}
      target-env:
        value: ${{ jobs.build.outputs.target-env }}
      target-url:
        value: ${{ jobs.build.outputs.target-url }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build for `${{ inputs.target }}`
    outputs:
      composer-cache: ${{ steps.environments.outputs.composer-cache }}
      should-reports: ${{ steps.environments.outputs.should-reports }}
      target-branch: ${{ steps.environments.outputs.target-branch }}
      target-env: ${{ env.APP_ENV }}
      target-url: ${{ env.APP_URL }}

    env:
      APP_ENV: ${{ inputs.target }}
      APP_URL: ${{ vars.APP_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: curl, intl, libxml, mbstring, pcntl, ssh2, zip
          tools: composer:v2
          coverage: none
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: true

      - name: Setup node.js
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version: 18.x

      - name: Setup environment
        id: environments
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          git config user.name "Creasi.HQ" && git config user.email "developers@creasi.co"
          echo "target-branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
          echo "composer-cache=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
          echo "should-reports=$([[ -n \"$CC_TEST_REPORTER_ID\" ]] && echo '1')" >> $GITHUB_OUTPUT

      - name: Prepare Composer Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.environments.outputs.composer-cache }}
          key: php-8.2-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: php-8.2-composer-

      - name: Install dependencies
        env:
          BRANCH: ${{ steps.environments.outputs.target-branch }}
        run: |
          composer install --prefer-dist --no-interaction --no-progress --ansi
          [[ $APP_ENV != 'testing' ]] && composer dep deploy:info env=${{ env.APP_ENV }} -- --branch $BRANCH
          composer ziggy:generate
          php artisan vendor:publish --tag creasi-assets --ansi

      - name: Build frontend
        env:
          APP_NAME: ${{ vars.APP_NAME }}
          APP_LOCALE: id
          FIREBASE_PROJECT_ID: ${{ vars.FIREBASE_PROJECT_ID }}
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
          FIREBASE_VAPID_KEY: ${{ secrets.FIREBASE_VAPID_KEY }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ORG: creasico
          SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
          VITE_API_URL: ${{ env.APP_URL }}/api
          VITE_GTM_ID: 'G-1KQP24LR0L'
        run: |
          pnpm build --mode ${{ env.APP_ENV }}

      - name: Store assets
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ env.APP_ENV }}
          path: |
            public/build
            public/vendor
