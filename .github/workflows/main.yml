name: Code Quality

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]
  release:
    types: [created]

env:
  APP_NAME: Creasi App
  APP_ENV: testing
  # AWS_ENDPOINT: 'https://is3.cloudhost.id'
  # AWS_DEFAULT_REGION: 'ap-southeast-3'
  # AWS_BUCKET: creasi-staging
  MAIL_FROM_ADDRESS: devtest@creasi.co

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build

    env:
      MIX_SENTRY_LARAVEL_DSN: ${{ secrets.SENTRY_DSN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'yarn'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn

      - name: Build assets
        run: yarn build

      - name: Store assets
        uses: actions/upload-artifact@v3
        with:
          name: public
          path: |
            public/css
            public/js
            public/mix-manifest.json

  tests:
    runs-on: ubuntu-latest
    name: Test with PHP ${{ matrix.php }}
    needs: build

    services:
      postgresql:
        image: postgres:14
        env:
          POSTGRES_DB: creasico
          POSTGRES_USER: creasico
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    strategy:
      fail-fast: false
      matrix:
        php: ['8.1']

    env:
      APP_KEY: ${{ secrets.APP_KEY }}
      DB_PASSWORD: secret
      SENTRY_TRACE_QUEUE_ENABLED: true

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, gd, redis-phpredis/phpredis@5.3.5, igbinary, lzf, zstd, lz4
          ini-values: error_reporting=E_ALL
          tools: composer:v2
          coverage: xdebug
        env:
          REDIS_CONFIGURE_OPTS: --enable-redis --enable-redis-igbinary --enable-redis-lzf --with-liblzf --enable-redis-zstd --with-libzstd --enable-redis-lz4 --with-liblz4
          REDIS_LIBS: liblz4-dev, liblzf-dev, libzstd-dev

      - name: Download assets
        id: download
        uses: actions/download-artifact@v3
        with:
          name: public
          path: public

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: composer install --prefer-dist --no-interaction --no-progress

      - name: Run migrations
        run: php artisan migrate --seed

      - name: Run tests
        run: php artisan test
        env:
          SENTRY_LARAVEL_DSN: ${{ secrets.SENTRY_DSN }}

  e2e:
    runs-on: ubuntu-latest
    name: Test on BrowserStack
    needs: tests

    services:
      postgresql:
        image: postgres:14
        env:
          POSTGRES_DB: creasico
          POSTGRES_USER: creasico
          POSTGRES_PASSWORD: secret
        ports:
          - 5432:5432
        options: --health-cmd=pg_isready --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    env:
      APP_KEY: ${{ secrets.APP_KEY }}
      DB_PASSWORD: secret
      SENTRY_TRACE_QUEUE_ENABLED: true

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, pdo_pgsql, gd, redis-phpredis/phpredis@5.3.5, igbinary, lzf, zstd, lz4
          tools: composer:v2
          coverage: xdebug
        env:
          REDIS_CONFIGURE_OPTS: --enable-redis --enable-redis-igbinary --enable-redis-lzf --with-liblzf --enable-redis-zstd --with-libzstd --enable-redis-lz4 --with-liblz4
          REDIS_LIBS: liblz4-dev, liblzf-dev, libzstd-dev

      - name: Download assets
        id: download
        uses: actions/download-artifact@v3
        with:
          name: public
          path: public

      - name: Install dependencies
        uses: nick-invision/retry@v1
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: composer install --prefer-dist --no-interaction --no-progress

      - name: 'Setup env'  # Invokes the setup-env action
        uses: browserstack/github-actions/setup-env@master
        with:
          username:  ${{ secrets.BROWSERSTACK_USERNAME }}
          access-key: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          build-name: ${{ github.ref }}
          project-name: "${{ github.repository }} - ${{ github.workflow }} on PHP 8.1"

      - name: 'Start local tunnel'
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: start
          local-logging-level: all-logs
          local-identifier: random

      - name: Run migrations
        run: php artisan migrate --seed

      - name: Run tests
        run: php artisan dusk
        env:
          APP_URL: http://127.0.0.1:8000

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload console logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: console
          path: tests/Browser/console

      - name: 'Stop local tunnel'
        uses: 'browserstack/github-actions/setup-local@master'
        with:
          local-testing: 'stop'

  # deploy:
  #   runs-on: ubuntu-latest
  #   name: Deploy
  #   needs: tests
  #   if: ${{ github.ref_name == 'develop' && github.event_name == 'push' }}

  #   environment:
  #     name: staging
  #     url: ${{ env.APP_URL }}

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Prepare
  #       run: |
  #         [[ ! -d $HOME/.ssh ]] && mkdir $HOME/.ssh
  #         echo "${{ secrets.STAGING_SERVER_RSAKEY }}" >> $HOME/.ssh/id_rsa
  #         echo "${{ secrets.STAGING_SERVER_SSH_HOSTS }}" >> $HOME/.ssh/known_hosts
  #         echo "${{ secrets.STAGING_SERVER_SSH_CONFIG }}" >> $HOME/.ssh/config
  #         chmod 600 $HOME/.ssh/* && ls -al $HOME/.ssh/
  #         git config user.name "Creasi.HQ" && git config user.email "dev@creasi.co"

  #     - name: Download assets
  #       id: download
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: public
  #         path: public

  #     - name: Deploy repo
  #       run: |
  #         git fetch creasico@creasi.co:~/git/wanho.git
  #         git push -fu creasico@creasi.co:~/git/wanho.git HEAD:master

  #     - name: Deploy assets
  #       run: rsync -zrtv public/ creasi.co:demo-wanho.creasi.co/public/
